" Smashing escape mapping
inoremap jk <Esc>
inoremap kj <Esc>
let mapleader = ","
let g:mapleader = ","
nmap <leader>v :split ~/.vimrc<CR>

" Setting line numbers
set number

call plug#begin('~/.config/vim/plugged')

Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'vim-test/vim-test'
Plug 'tpope/vim-dispatch'
Plug 'morhetz/gruvbox'

if !empty($SPIN) " Seems to throw errors locally
	Plug 'github/copilot.vim'
endif

Plug 'tpope/vim-fugitive' " Git commands
Plug 'tpope/vim-rhubarb' " Allows visiting Github URLs
Plug 'neovim/nvim-lspconfig'
Plug 'airblade/vim-gitgutter' " Shows git diff in the gutter

call plug#end()

" Theme
colorscheme gruvbox
set background=dark  " For the dark theme

" Shortcuts for FZF commands
nnoremap <C-p> :GFiles<CR>
nnoremap <C-t> :Buffers<CR>
nnoremap <C-f> :Rg<CR>

" Vim Test
nmap <silent> <leader>tn :TestNearest<CR>
nmap <silent> <leader>tf :TestFile<CR>
nmap <silent> <leader>ts :TestSuite<CR>
nmap <silent> <leader>tl :TestLast<CR>
nmap <silent> <leader>tg :TestVisit<CR>
let test#strategy = "dispatch"
let g:dispatch_tmux_pipe_pane = 1  " needed so $stdout.tty? is true and reline works when debugging
set cc=121

lua << EOF
local util = require 'lspconfig.util'

return {
  default_config = {
    cmd = { 'ruby-lsp' },
    filetypes = { 'ruby' },
    root_dir = util.root_pattern('Gemfile', '.git'),
    init_options = {
      formatter = 'auto',
    },
    single_file_support = true,
  },
  docs = {
    description = [[
https://shopify.github.io/ruby-lsp/

This gem is an implementation of the language server protocol specification for
Ruby, used to improve editor features.

Install the gem. There's no need to require it, since the server is used as a
standalone executable.

```sh
group :development do
  gem "ruby-lsp", require: false
end
```
    ]],
    default_config = {
      root_dir = [[root_pattern("Gemfile", ".git")]],
    },
  },
}
EOF

